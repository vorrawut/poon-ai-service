# Ruff configuration for AI Service
# https://docs.astral.sh/ruff/configuration/

target-version = "py311"
line-length = 88
select = [
    "E", "W",    # pycodestyle
    "F",         # pyflakes
    "I",         # isort
    "B",         # flake8-bugbear
    "C4",        # flake8-comprehensions
    "UP",        # pyupgrade
    "N",         # pep8-naming
    "S",         # flake8-bandit
    "ARG",       # flake8-unused-arguments
    "PT",        # flake8-pytest-style
    "RUF",       # ruff-specific rules
]

ignore = [
    "S101",      # Use of `assert` detected (pytest uses assert)
    "S311",      # Standard pseudo-random generators not suitable for security/cryptographic purposes
    "N805",      # First argument of a method should be named `self`
    "B008",      # Do not perform function call in argument defaults (FastAPI pattern)
    "S104",      # Possible binding to all interfaces (intentional for development)
    "S603",      # subprocess call (needed for OCR)
    "E501",      # Line too long (formatter will handle)
]

# Allow imports after sys.path modification in test files
[per-file-ignores]
"tests/**" = ["E402", "ARG002"]  # Allow unused arguments in test mocks
"scripts/**" = ["E402"]

[flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[isort]
known-first-party = ["ai_service"]
force-single-line = false
